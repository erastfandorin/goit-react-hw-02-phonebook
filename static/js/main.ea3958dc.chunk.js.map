{"version":3,"sources":["App/ContactList/Contact/Contact.module.css","App/ContactForm/ContactForm.js","App/Filter/Filter.js","App/ContactList/Contact/Contact.js","App/ContactList/ContactList.js","App/App.js","index.js","App/App.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","labelNameId","v4","labelNumberId","state","handleChange","target","setState","value","handleSubmit","e","props","contacts","addContact","preventDefault","find","contact","alert","id","reset","this","style","className","form_phonebook","onSubmit","htmlFor","input_form_phonebook","type","onChange","required","button_form_phonebook","Component","Filter","filter","length","page_find_contacts","input_find_contacts","Contact","onDeleteContact","buttonDelete","onClick","ContactList","filterContacts","deleteContact","map","key","App","toLowerCase","includes","newContact","getContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","setItem","stringify","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea3958dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"Contact_buttonDelete__2oib_\"};","import React, { Component } from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\"\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  labelNameId = v4();\r\n  labelNumberId = v4();\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    const { contacts, addContact } = this.props;\r\n    e.preventDefault();\r\n    if (!contacts.find(contact => contact.name === name)) {\r\n      const newContact = {\r\n        id: v4(),\r\n        name: name,\r\n        number: number\r\n      };\r\n      addContact(newContact);\r\n      this.reset();\r\n    } else {\r\n      alert(`${name}is already in contacts.`);\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { style } = this.props;\r\n    return (\r\n      <form className={style.form_phonebook} onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.labelNameId}>Name</label>\r\n        <input\r\n          className={style.input_form_phonebook}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          id={this.labelNameId}\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <label htmlFor={this.labelNumberId}>Number</label>\r\n        <input\r\n          className={style.input_form_phonebook}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          id={this.labelNumberId}\r\n          onChange={this.handleChange}\r\n          required\r\n        />\r\n        <button className={style.button_form_phonebook}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  style: PropTypes.object.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  addContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ style, filter, contacts, handleChange }) => {\r\n  return (\r\n    contacts.length > 2 && (\r\n      <>\r\n        <p className={style.page_find_contacts}>Find contacts by name</p>\r\n        <input\r\n          className={style.input_find_contacts}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handleChange}\r\n        />\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  style: PropTypes.object.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n  handleChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Contact.module.css\";\r\n\r\nconst Contact = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      {contact.name}: {contact.number}\r\n      <button className={style.buttonDelete} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport Contact from \"./Contact/Contact\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, filterContacts, deleteContact }) => {\r\n  return (\r\n    contacts.length > 0 && (\r\n      <ul>\r\n        {filterContacts.map(contact => (\r\n          <Contact\r\n            key={contact.id}\r\n            contact={contact}\r\n            onDeleteContact={() => deleteContact(contact.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filterContacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport style from \"./App.module.css\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport Filter from \"./Filter/Filter\";\nimport ContactList from \"./ContactList/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\n    ],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    const getContacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(getContacts);\n    if (parseContacts) {\n      this.setState(({ contacts }) => {\n        const newArray = [...contacts, ...parseContacts];\n        return { contacts: newArray };\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n      console.log(\"save\");\n    }\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  addContact = newContact => {\n    this.setState(({ contacts }) => {\n      const newArray = [...contacts, newContact];\n      return { contacts: newArray };\n    });\n  };\n  deleteContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id)\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filterContacts = this.filterContacts(contacts, filter);\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm\n          style={style}\n          contacts={contacts}\n          addContact={this.addContact}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          style={style}\n          filter={filter}\n          contacts={contacts}\n          handleChange={this.handleChange}\n        />\n        <ContactList\n          contacts={contacts}\n          filterContacts={filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_phonebook\":\"App_form_phonebook__13pOf\",\"input_form_phonebook\":\"App_input_form_phonebook__2Giyr\",\"button_form_phonebook\":\"App_button_form_phonebook__3BdH5\",\"page_find_contacts\":\"App_page_find_contacts__S9Y-s\",\"input_find_contacts\":\"App_input_find_contacts__28sTO\"};"],"sourceRoot":""}