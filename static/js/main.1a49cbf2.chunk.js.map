{"version":3,"sources":["App/Filter/Filter.module.css","App/ContactForm/ContactForm.module.css","App/transition/fade.module.css","App/transition/slide.module.css","App/ContactList/ContactList.module.css","App/App.module.css","App/transition/slideLogo.module.css","App/ContactForm/ContactForm.js","App/Filter/Filter.js","App/ContactList/Contact/Contact.js","App/ContactList/ContactList.js","App/App.js","index.js","App/ContactList/Contact/Contact.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","handleChange","target","setState","value","handleSubmit","e","state","props","contacts","addContact","preventDefault","find","contact","toastr","error","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","id","v4","reset","this","className","formPhonebook","onSubmit","formPhonebookLable","htmlFor","formPhonebookInput","type","onChange","required","formPhonebookButton","Component","Filter","filter","CSSTransition","in","length","timeout","classNames","fade","unmountOnExit","findContacts","findContactsParagraph","findContactsInput","Contact","onDeleteContact","contactListItem","contactListItemName","contactListItemNumber","buttonDelete","onClick","ContactList","filterContacts","deleteContact","TransitionGroup","contactList","component","map","slide","key","App","ready","load","toLowerCase","includes","newContact","getContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","setItem","stringify","slideLogo","logoPhonebook","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a49cbf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContacts\":\"Filter_findContacts__7Md9L\",\"findContactsParagraph\":\"Filter_findContactsParagraph__WZ42j\",\"findContactsInput\":\"Filter_findContactsInput__1_6jo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPhonebook\":\"ContactForm_formPhonebook__31Ubu\",\"formPhonebookLable\":\"ContactForm_formPhonebookLable__2batu\",\"formPhonebookInput\":\"ContactForm_formPhonebookInput__2M_eE\",\"formPhonebookButton\":\"ContactForm_formPhonebookButton__18kmO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1cd8l\",\"enterActive\":\"fade_enterActive__R60CR\",\"exit\":\"fade_exit__230X9\",\"exitActive\":\"fade_exitActive__KzF4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__zIP16\",\"enterActive\":\"slide_enterActive__18z9r\",\"exit\":\"slide_exit__bqkUn\",\"exitActive\":\"slide_exitActive__29N6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2Y9Yl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoPhonebook\":\"App_logoPhonebook__3bULM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLogo_enter__3JIQv\",\"enterActive\":\"slideLogo_enterActive__kd5u8\",\"exit\":\"slideLogo_exit__1IiRS\",\"exitActive\":\"slideLogo_exitActive__14ayE\"};","import React, { Component } from 'react';\nimport v4 from 'uuid/v4';\nimport toastr from 'toastr/toastr';\nimport 'toastr/build/toastr.css';\nimport PropTypes from 'prop-types';\nimport {\n  formPhonebook,\n  formPhonebookLable,\n  formPhonebookInput,\n  formPhonebookButton,\n} from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  constructor() {\n    super();\n    this.state = { ...INITIAL_STATE };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    const { contacts, addContact } = this.props;\n    e.preventDefault();\n    if (!contacts.find(contact => contact.name === name)) {\n      const newContact = {\n        id: v4(),\n        name,\n        number,\n      };\n      addContact(newContact);\n\n      this.reset();\n    } else {\n      toastr.error(`${name}is already in contacts.`);\n\n      toastr.options = {\n        closeButton: false,\n        debug: false,\n        newestOnTop: false,\n        progressBar: true,\n        positionClass: 'toast-top-right',\n        preventDuplicates: false,\n        onclick: null,\n        showDuration: '40000',\n        hideDuration: '2000',\n        timeOut: '250',\n        extendedTimeOut: '1000',\n        showEasing: 'swing',\n        hideEasing: 'swing',\n        showMethod: 'fadeIn',\n        hideMethod: 'fadeOut',\n      };\n    }\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={formPhonebook} onSubmit={this.handleSubmit}>\n        <label className={formPhonebookLable} htmlFor=\"formPhonebookName\">\n          Name\n          <input\n            className={formPhonebookInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id=\"formPhonebookName\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label className={formPhonebookLable} htmlFor=\"formPhonebookNumber\">\n          Number\n          <input\n            className={formPhonebookInput}\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            id=\"formPhonebookNumber\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={formPhonebookButton}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport fade from '../transition/fade.module.css';\nimport {\n  findContacts,\n  findContactsParagraph,\n  findContactsInput,\n} from './Filter.module.css';\n\nconst Filter = ({ filter, contacts, handleChange }) => {\n  return (\n    <CSSTransition\n      in={contacts.length > 2}\n      timeout={250}\n      classNames={fade}\n      unmountOnExit\n    >\n      <div className={findContacts}>\n        <p className={findContactsParagraph}>Find contacts by name</p>\n        <input\n          className={findContactsInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </div>\n    </CSSTransition>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  contactListItem,\n  contactListItemName,\n  contactListItemNumber,\n  buttonDelete,\n} from './Contact.module.css';\n\nconst Contact = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={contactListItem}>\n      <p className={contactListItemName}>{contact.name}</p>\n      <p className={contactListItemNumber}> {contact.number}</p>\n      <button type=\"button\" className={buttonDelete} onClick={onDeleteContact}>\n        ⛌\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact/Contact';\nimport slide from '../transition/slide.module.css';\nimport { contactList } from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filterContacts, deleteContact }) => {\n  return (\n    contacts.length > 0 && (\n      <TransitionGroup className={contactList} component=\"ul\">\n        {filterContacts.map(contact => (\n          <CSSTransition\n            classNames={slide}\n            key={contact.id}\n            timeout={250}\n            unmountOnExit\n          >\n            <Contact\n              contact={contact}\n              onDeleteContact={() => deleteContact(contact.id)}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filterContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { logoPhonebook } from './App.module.css';\nimport slideLogo from './transition/slideLogo.module.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [],\n      filter: '',\n      load: false,\n    };\n  }\n\n  componentDidMount() {\n    const getContacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(getContacts);\n    if (parseContacts) {\n      this.setState(({ contacts }) => {\n        const newArray = [...contacts, ...parseContacts];\n        return { contacts: newArray };\n      });\n    }\n    this.ready();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState !== this.state) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  ready = () => {\n    this.setState(() => ({ load: true }));\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  addContact = newContact => {\n    this.setState(({ contacts }) => {\n      const newArray = [newContact, ...contacts];\n      return { contacts: newArray };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter, load } = this.state;\n    const filterContacts = this.filterContacts(contacts, filter);\n\n    return (\n      <>\n        <CSSTransition in={load} timeout={500} classNames={slideLogo}>\n          <h1 className={logoPhonebook}>Phonebook</h1>\n        </CSSTransition>\n        <ContactForm contacts={contacts} addContact={this.addContact} />\n        <Filter\n          filter={filter}\n          contacts={contacts}\n          handleChange={this.handleChange}\n        />\n        <ContactList\n          contacts={contacts}\n          filterContacts={filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.module.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"Contact_contactListItem__3g9fL\",\"contactListItemName\":\"Contact_contactListItemName__3fjOM\",\"contactListItemNumber\":\"Contact_contactListItemNumber__AJ2ig\",\"buttonDelete\":\"Contact_buttonDelete__2oib_\"};"],"sourceRoot":""}