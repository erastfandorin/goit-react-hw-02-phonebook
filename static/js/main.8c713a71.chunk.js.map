{"version":3,"sources":["components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/transition/fade.module.css","components/transition/slide.module.css","components/ContactList/ContactList.module.css","components/App.module.css","components/transition/slideLogo.module.css","redux/contactsActions.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/App.js","components/AppContainer.js","redux/contactsReduser.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Type","deleteContact","id","type","payload","INITIAL_STATE","name","number","ContactForm","handleChange","target","setState","value","handleSubmit","e","state","props","contacts","addContact","preventDefault","find","contact","toastr","error","options","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","v4","reset","this","className","formPhonebook","onSubmit","formPhonebookLable","htmlFor","formPhonebookInput","onChange","required","formPhonebookButton","Component","connect","phoneBook","dispatch","newContact","contactAction","Filter","filter","CSSTransition","in","length","timeout","classNames","fade","unmountOnExit","findContacts","findContactsParagraph","findContactsInput","Contact","onDeleteContact","contactListItem","contactListItemName","contactListItemNumber","buttonDelete","onClick","ContactList","filterContacts","TransitionGroup","contactList","component","map","slide","key","App","loadLogo","ready","changeFilter","toLowerCase","includes","addContactWithLocalhost","getContacts","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","slideLogo","logoPhonebook","ContactFormContainer","FilterContainer","ContactListContainer","arrayContacts","findValue","initialState","combineReducers","action","rootReducer","contactsReduser","store","createStore","devToolsEnhancer","ReactDOM","render","AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.8c713a71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"Contact_contactListItem__OaQ8d\",\"contactListItemName\":\"Contact_contactListItemName__3qxKz\",\"contactListItemNumber\":\"Contact_contactListItemNumber__36qow\",\"buttonDelete\":\"Contact_buttonDelete__3Soml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findContacts\":\"Filter_findContacts__1mfEc\",\"findContactsParagraph\":\"Filter_findContactsParagraph__1YwPw\",\"findContactsInput\":\"Filter_findContactsInput__cm9ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1dpXZ\",\"enterActive\":\"fade_enterActive__1cNSm\",\"exit\":\"fade_exit__2sG6e\",\"exitActive\":\"fade_exitActive__1TjRo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__qXfBQ\",\"enterActive\":\"slide_enterActive__3He5X\",\"exit\":\"slide_exit__38Wyb\",\"exitActive\":\"slide_exitActive__4uOCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__21kqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoPhonebook\":\"App_logoPhonebook__oD8Ct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideLogo_enter__29_8F\",\"enterActive\":\"slideLogo_enterActive__1jWvt\",\"exit\":\"slideLogo_exit__2kxqO\",\"exitActive\":\"slideLogo_exitActive__3xk2O\"};","export const Type = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  ADD_CONTACT_WITH_LOCALHOST: 'ADD_CONTACT_WITH_LOCALHOST',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  CHANGE_FILTER: 'CHANGE_FILTER',\n};\n\nexport const addContact = newContact => ({\n  type: Type.ADD_CONTACT,\n  payload: newContact,\n});\n\nexport const addContactWithLocalhost = arrayContacts => ({\n  type: Type.ADD_CONTACT_WITH_LOCALHOST,\n  payload: arrayContacts,\n});\n\nexport const deleteContact = id => ({\n  type: Type.DELETE_CONTACT,\n  payload: id,\n});\n\nexport const changeFilter = findValue => ({\n  type: Type.CHANGE_FILTER,\n  payload: findValue,\n});\n","import React, { Component } from 'react';\nimport v4 from 'uuid/v4';\nimport toastr from 'toastr/toastr';\nimport 'toastr/build/toastr.css';\nimport PropTypes from 'prop-types';\nimport {\n  formPhonebook,\n  formPhonebookLable,\n  formPhonebookInput,\n  formPhonebookButton,\n} from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  constructor() {\n    super();\n    this.state = { ...INITIAL_STATE };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    const { contacts, addContact } = this.props;\n    e.preventDefault();\n    if (!contacts.find(contact => contact.name === name)) {\n      const newContact = {\n        id: v4(),\n        name,\n        number,\n      };\n      addContact(newContact);\n\n      this.reset();\n    } else {\n      toastr.error(`${name} is already in contacts.`);\n\n      toastr.options = {\n        closeButton: false,\n        debug: false,\n        newestOnTop: false,\n        progressBar: true,\n        positionClass: 'toast-top-right',\n        preventDuplicates: false,\n        onclick: null,\n        showDuration: '40000',\n        hideDuration: '2000',\n        timeOut: '250',\n        extendedTimeOut: '1000',\n        showEasing: 'swing',\n        hideEasing: 'swing',\n        showMethod: 'fadeIn',\n        hideMethod: 'fadeOut',\n      };\n    }\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={formPhonebook} onSubmit={this.handleSubmit}>\n        <label className={formPhonebookLable} htmlFor=\"formPhonebookName\">\n          Name\n          <input\n            className={formPhonebookInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id=\"formPhonebookName\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <label className={formPhonebookLable} htmlFor=\"formPhonebookNumber\">\n          Number\n          <input\n            className={formPhonebookInput}\n            type=\"number\"\n            name=\"number\"\n            value={number}\n            id=\"formPhonebookNumber\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={formPhonebookButton}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { connect } from 'react-redux';\nimport * as contactAction from '../../redux/contactsActions';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: newContact => dispatch(contactAction.addContact(newContact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport fade from '../transition/fade.module.css';\nimport {\n  findContacts,\n  findContactsParagraph,\n  findContactsInput,\n} from './Filter.module.css';\n\nconst Filter = ({ filter, contacts, handleChange }) => {\n  return (\n    <CSSTransition\n      in={contacts.length > 1}\n      timeout={250}\n      classNames={fade}\n      unmountOnExit\n    >\n      <div className={findContacts}>\n        <p className={findContactsParagraph}>Find contacts by name</p>\n        <input\n          className={findContactsInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </div>\n    </CSSTransition>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from 'react-redux';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.contacts,\n  filter: state.phoneBook.filter,\n});\n\nexport default connect(mapStateToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  contactListItem,\n  contactListItemName,\n  contactListItemNumber,\n  buttonDelete,\n} from './Contact.module.css';\n\nconst Contact = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={contactListItem}>\n      <p className={contactListItemName}>{contact.name}</p>\n      <p className={contactListItemNumber}> {contact.number}</p>\n      <button type=\"button\" className={buttonDelete} onClick={onDeleteContact}>\n        ⛌\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact/Contact';\nimport slide from '../transition/slide.module.css';\nimport { contactList } from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filterContacts, deleteContact }) => {\n  return (\n    contacts.length > 0 && (\n      <TransitionGroup className={contactList} component=\"ul\">\n        {filterContacts.map(contact => (\n          <CSSTransition\n            classNames={slide}\n            key={contact.id}\n            timeout={250}\n            unmountOnExit\n          >\n            <Contact\n              contact={contact}\n              onDeleteContact={() => deleteContact(contact.id)}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filterContacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport * as contactAction from '../../redux/contactsActions';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(contactAction.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactFormContainer from './ContactForm/ContactFormContainer';\nimport FilterContainer from './Filter/FilterContainer';\nimport ContactListContainer from './ContactList/ContactListContainer';\nimport { logoPhonebook } from './App.module.css';\nimport slideLogo from './transition/slideLogo.module.css';\n\nclass App extends Component {\n  loadLogo = false;\n\n  componentDidMount() {\n    const { addContactWithLocalhost } = this.props;\n    const getContacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(getContacts);\n    if (parseContacts) {\n      addContactWithLocalhost(parseContacts);\n    }\n    this.ready();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { contacts } = this.props;\n    if (prevProps !== this.props) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  ready = () => {\n    this.loadLogo = true;\n  };\n\n  handleChange = ({ target }) => {\n    const { changeFilter } = this.props;\n    changeFilter(target.value);\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.props;\n\n    return (\n      <>\n        <CSSTransition\n          in={this.loadLogo}\n          timeout={50000}\n          classNames={slideLogo}\n        >\n          <h1 className={logoPhonebook}>Phonebook</h1>\n        </CSSTransition>\n        <ContactFormContainer />\n        <FilterContainer handleChange={this.handleChange} />\n        <ContactListContainer\n          filterContacts={this.filterContacts(contacts, filter)}\n        />\n      </>\n    );\n  }\n}\n\nApp.propTypes = {\n  addContactWithLocalhost: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport * as contactAction from '../redux/contactsActions';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.contacts,\n  filter: state.phoneBook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContactWithLocalhost: arrayContacts =>\n    dispatch(contactAction.addContactWithLocalhost(arrayContacts)),\n  deleteContact: id => dispatch(contactAction.deleteContact(id)),\n  changeFilter: findValue => dispatch(contactAction.changeFilter(findValue)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { Type } from './contactsActions';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n};\n\nconst contactsReducer = (state = initialState.contacts, action) => {\n  switch (action.type) {\n    case Type.ADD_CONTACT:\n      return [action.payload, ...state];\n\n    case Type.ADD_CONTACT_WITH_LOCALHOST:\n      return [...action.payload, ...state];\n\n    case Type.DELETE_CONTACT:\n      return state.filter(contact => contact.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = initialState.filter, action) => {\n  switch (action.type) {\n    case Type.CHANGE_FILTER:\n      return `${action.payload}`;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport contactsReduser from './contactsReduser';\n\nconst rootReducer = combineReducers({\n  phoneBook: contactsReduser,\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './components/AppContainer';\nimport store from './redux/store';\nimport './index.module.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPhonebook\":\"ContactForm_formPhonebook__33s0J\",\"formPhonebookLable\":\"ContactForm_formPhonebookLable__1zDfu\",\"formPhonebookInput\":\"ContactForm_formPhonebookInput__4uV4l\",\"formPhonebookButton\":\"ContactForm_formPhonebookButton__3JfZ2\"};"],"sourceRoot":""}